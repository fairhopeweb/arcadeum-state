(function() {var implementors = {};
implementors["arcadeum"] = [{"text":"impl&lt;S&gt; Freeze for Proof&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::ID: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::Nonce: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for RootProof&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::ID: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::Nonce: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for Diff&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for ProofState&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::ID: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::Nonce: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for ProofAction&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for PlayerAction&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for MerkleTree&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for MerkleProof&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Tester&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::ID: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::Nonce: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::Secret: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Store&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::ID: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::Nonce: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as State&gt;::Secret: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Context&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Log","synthetic":true,"types":[]},{"text":"impl Freeze for JsRng","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()